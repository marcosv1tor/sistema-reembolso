// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Reembolso.Funcionarios.API.Data;

#nullable disable

namespace Reembolso.Funcionarios.API.Migrations
{
    [DbContext(typeof(FuncionariosDbContext))]
    partial class FuncionariosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Reembolso.Funcionarios.API.Models.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataDemissao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Departamento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RG")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_Colaboradores_Ativo");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasDatabaseName("IX_Colaboradores_CPF")
                        .HasFilter("[CPF] IS NOT NULL");

                    b.HasIndex("DataAdmissao")
                        .HasDatabaseName("IX_Colaboradores_DataAdmissao");

                    b.HasIndex("Departamento")
                        .HasDatabaseName("IX_Colaboradores_Departamento");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Colaboradores_Email");

                    b.HasIndex("Matricula")
                        .IsUnique()
                        .HasDatabaseName("IX_Colaboradores_Matricula");

                    b.ToTable("Colaboradores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b822389-df64-4635-85cd-714160ed3bef"),
                            Ativo = true,
                            CEP = "01234-567",
                            CPF = "123.456.789-01",
                            Cargo = "Analista de Sistemas",
                            Cidade = "São Paulo",
                            CriadoPor = "Sistema",
                            DataAdmissao = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2025, 6, 23, 1, 26, 8, 555, DateTimeKind.Utc).AddTicks(9708),
                            DataNascimento = new DateTime(1990, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departamento = "TI",
                            Email = "joao.silva@empresa.com",
                            Endereco = "Rua das Flores, 123",
                            Estado = "SP",
                            Matricula = "COL001",
                            Nome = "João Silva",
                            RG = "12.345.678-9",
                            Salario = 5000.00m,
                            Telefone = "(11) 99999-1111"
                        },
                        new
                        {
                            Id = new Guid("2d87e508-08da-4485-85c9-057ab16eafab"),
                            Ativo = true,
                            CEP = "01310-100",
                            CPF = "987.654.321-09",
                            Cargo = "Gerente Financeiro",
                            Cidade = "São Paulo",
                            CriadoPor = "Sistema",
                            DataAdmissao = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2025, 6, 23, 1, 26, 8, 555, DateTimeKind.Utc).AddTicks(9717),
                            DataNascimento = new DateTime(1985, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departamento = "Financeiro",
                            Email = "maria.santos@empresa.com",
                            Endereco = "Av. Paulista, 456",
                            Estado = "SP",
                            Matricula = "COL002",
                            Nome = "Maria Santos",
                            RG = "98.765.432-1",
                            Salario = 8000.00m,
                            Telefone = "(11) 99999-2222"
                        },
                        new
                        {
                            Id = new Guid("b7a187e5-ddcb-4472-883a-c6bdfa3d6e6d"),
                            Ativo = true,
                            CEP = "01305-000",
                            CPF = "456.789.123-45",
                            Cargo = "Desenvolvedor",
                            Cidade = "São Paulo",
                            CriadoPor = "Sistema",
                            DataAdmissao = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2025, 6, 23, 1, 26, 8, 555, DateTimeKind.Utc).AddTicks(9722),
                            DataNascimento = new DateTime(1992, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departamento = "TI",
                            Email = "pedro.oliveira@empresa.com",
                            Endereco = "Rua Augusta, 789",
                            Estado = "SP",
                            Matricula = "COL003",
                            Nome = "Pedro Oliveira",
                            RG = "45.678.912-3",
                            Salario = 4500.00m,
                            Telefone = "(11) 99999-3333"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
