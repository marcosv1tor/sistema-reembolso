// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Reembolso.Usuarios.API.Data;

#nullable disable

namespace Reembolso.Usuarios.API.Migrations
{
    [DbContext(typeof(UsuariosDbContext))]
    [Migration("20250623005457_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Reembolso.Usuarios.API.Models.HistoricoLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("text");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EnderecoIP")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<bool>("LoginSucesso")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoFalha")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricoLogins");
                });

            modelBuilder.Entity("Reembolso.Usuarios.API.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("text");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("PrimeiroLogin")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0147325e-3def-489a-a235-f0f597768758"),
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 6, 23, 0, 54, 56, 447, DateTimeKind.Utc).AddTicks(9846),
                            Email = "admin@reembolso.com",
                            Nome = "Administrador do Sistema",
                            PrimeiroLogin = false,
                            SenhaHash = "$2a$11$W0ci924tI9LXiXQiLPrT6us21fBoAR81dgFhFNSWFHUfpdqyibD1y",
                            TipoUsuario = 1
                        },
                        new
                        {
                            Id = new Guid("9110ecc2-65f5-499a-a828-e523cf74681b"),
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 6, 23, 0, 54, 56, 447, DateTimeKind.Utc).AddTicks(9863),
                            Email = "analista@reembolso.com",
                            Nome = "Analista Financeiro",
                            PrimeiroLogin = false,
                            SenhaHash = "$2a$11$W0ci924tI9LXiXQiLPrT6us21fBoAR81dgFhFNSWFHUfpdqyibD1y",
                            TipoUsuario = 2
                        },
                        new
                        {
                            Id = new Guid("91d0a3d7-4c69-4c1e-887c-7908fbf9187b"),
                            Ativo = true,
                            DataCriacao = new DateTime(2025, 6, 23, 0, 54, 56, 447, DateTimeKind.Utc).AddTicks(9953),
                            Email = "colaborador@reembolso.com",
                            Nome = "Colaborador Teste",
                            PrimeiroLogin = false,
                            SenhaHash = "$2a$11$W0ci924tI9LXiXQiLPrT6us21fBoAR81dgFhFNSWFHUfpdqyibD1y",
                            TipoUsuario = 3
                        });
                });

            modelBuilder.Entity("Reembolso.Usuarios.API.Models.HistoricoLogin", b =>
                {
                    b.HasOne("Reembolso.Usuarios.API.Models.Usuario", "Usuario")
                        .WithMany("HistoricoLogins")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Reembolso.Usuarios.API.Models.Usuario", b =>
                {
                    b.Navigation("HistoricoLogins");
                });
#pragma warning restore 612, 618
        }
    }
}
