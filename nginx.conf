events {
    worker_connections 1024;
}

http {
    upstream usuarios_api {
        server usuarios-api:8080;
    }

    upstream funcionarios_api {
        server funcionarios-api:8080;
    }

    upstream solicitacoes_api {
        server solicitacoes-api:8080;
    }

    upstream relatorios_api {
        server relatorios-api:8080;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Gateway status
        location /gateway/status {
            access_log off;
            return 200 '{"status":"ok","timestamp":"$time_iso8601","version":"1.0.0"}';
            add_header Content-Type application/json;
        }

        # CORS preflight requests
        location ~ ^/api/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # CORS headers for actual requests
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        # Usuarios API
        location /api/usuarios/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://usuarios_api/api/usuarios/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Auth endpoints with stricter rate limiting
        location ~ ^/api/usuarios/(login|register|refresh-token) {
            limit_req zone=auth_limit burst=10 nodelay;
            
            proxy_pass http://usuarios_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Funcionarios API
        location /api/funcionarios/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://funcionarios_api/api/funcionarios/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Solicitações de Reembolso API
        location /api/solicitacoes/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://solicitacoes_api/api/solicitacoes/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Increase buffer size for file uploads
            client_max_body_size 50M;
            proxy_request_buffering off;
        }

        # Relatórios API
        location /api/relatorios/ {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://relatorios_api/api/relatorios/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeouts for report generation
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Larger buffers for report downloads
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
        }

        # Health checks for individual services
        location /api/usuarios/health {
            access_log off;
            proxy_pass http://usuarios_api/health;
        }

        location /api/funcionarios/health {
            access_log off;
            proxy_pass http://funcionarios_api/health;
        }

        location /api/solicitacoes/health {
            access_log off;
            proxy_pass http://solicitacoes_api/health;
        }

        location /api/relatorios/health {
            access_log off;
            proxy_pass http://relatorios_api/health;
        }

        # Swagger documentation
        location /swagger/usuarios/ {
            proxy_pass http://usuarios_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /swagger/funcionarios/ {
            proxy_pass http://funcionarios_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /swagger/solicitacoes/ {
            proxy_pass http://solicitacoes_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /swagger/relatorios/ {
            proxy_pass http://relatorios_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default location
        location / {
            return 200 '{"message":"Reembolso API Gateway","version":"1.0.0","timestamp":"$time_iso8601","services":["usuarios","funcionarios","solicitacoes","relatorios"]}';
            add_header Content-Type application/json;
        }

        # Error pages
        error_page 404 /404.json;
        location = /404.json {
            return 404 '{"error":"Not Found","message":"The requested resource was not found","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
            return 500 '{"error":"Internal Server Error","message":"An internal server error occurred","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }

    # HTTPS server (optional - requires SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # Include the same location blocks as the HTTP server
    # }
}